[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core>=1" ]

[tool.poetry]
name = "adventofcode-2021"
version = "0.1.0"
description = ""
authors = [ "m9810223 <m9810223@gmail.com>" ]

[tool.poetry.dependencies]
python = ">3.8,<4"
cleo = "^0.8.1"
clikit = "^0.6.2"
pydantic = "^2.10.3"

[tool.poetry.dev-dependencies]

[tool.black]
# https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html
line-length = 120
# skip-string-normalization = true

[tool.ruff]
line-length = 120
fix = true
show-fixes = true
output-format = "full"

format.quote-style = "double"
lint.extend-select = [
  # "A",   # flake8-builtins
  # "AIR", # Airflow
  # # "ANN",   # flake8-annotations
  # "ANN001", # missing-type-function-argument
  # "ANN401", # any-type
  # # "ARG",    # flake8-unused-arguments
  # "ASYNC", # flake8-async
  # "B",     # flake8-bugbear
  # "BLE",   # flake8-blind-except
  # "C4",    # flake8-comprehensions
  # "C90",   # mccabe
  # "COM",   # flake8-commas
  # # "CPY",   # flake8-copyright
  # # "D",     # pydocstyle
  # "DJ", # flake8-django
  # # "DOC", # pydoclint
  # "DTZ", # flake8-datetimez
  # "E",   # pycodestyle Error
  # "EM",  # flake8-errmsg
  # # "ERA", # eradicate
  # "EXE", # flake8-executable
  # "F",   # Pyflakes
  # # "FA",   # flake8-future-annotations
  # "FAST", # FastAPI
  # "FBT",  # flake8-boolean-trap
  # # "FIX",  # flake8-fixme
  # "FLY",  # flynt
  # "FURB", # refurb
  # "G",    # flake8-logging-format
  # "I",    # isort
  # "ICN",  # flake8-import-conventions
  # # "INP",  # flake8-no-pep420
  # "INT", # flake8-gettext
  # "ISC", # flake8-implicit-str-concat
  # "LOG", # flake8-logging
  # "N",   # pep8-naming
  # "NPY", # NumPy-specific rules
  # "PD",  # pandas-vet
  # # "PERF", # Perflint
  # "PGH", # pygrep-hooks
  # "PIE", # flake8-pie
  # "PL",  # Pylint
  # "PT",  # flake8-pytest-style
  # "PTH", # flake8-use-pathlib
  # "PYI", # flake8-pyi
  # "Q",   # flake8-quotes
  # "RET", # flake8-return
  # "RSE", # flake8-raise
  # "RUF", # Ruff-specific rules
  # "S",   # flake8-bandit
  # # "SIM",  # flake8-simplify
  # "SLF",  # flake8-self
  # "SLOT", # flake8-slots
  # "T10",  # flake8-debugger
  # # "T20",   # flake8-print
  # "TC", # flake8-type-checking
  # # "TD",  # flake8-todos
  # "TID", # flake8-tidy-imports
  # "TRY", # tryceratops
  # "UP",  # pyupgrade
  # "W",   # pycodestyle Warning
  # "YTT", # flake8-2020
]
lint.extend-ignore = [
  # "RET504", # Unnecessary assignment before return statement
  # "S101",   # Use of `assert` detected
  "E741",
]
lint.flake8-import-conventions.aliases.typing = "t"
lint.flake8-import-conventions.banned-from = [ "typing" ]
# lint.flake8-quotes.docstring-quotes = "single"
lint.isort.force-single-line = true
lint.isort.force-sort-within-sections = true
lint.isort.known-local-folder = [  ]
# https://beta.ruff.rs/docs/settings/#isort
lint.isort.lines-after-imports = 2
